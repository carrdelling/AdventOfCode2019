from src.intcode import IntCode


def get_intersections(spacemap, output):

    x, y = 0, 0
    for c in output:
        if c != 10:
            spacemap[(x, y)] = c
            y += 1
        else:
            x += 1
            y = 0

    intersections = []
    for (x, y), v in list(spacemap.items())[:]:
        if v != 35:
            continue

        if all([spacemap[(x-1, y)] == 35, spacemap[(x+1, y)] == 35,
                spacemap[(x, y+1)] == 35, spacemap[(x, y+1)] == 35,]):
            intersections.append((x, y))

    return intersections


def solve(program):

    # solve the map manually

    """
    ........................................#############..
    ........................................#...........#..
    ........#######.........................#...........#..
    ........#.....#.........................#...........#..
    ........#.....#.#############...........#...........#..
    ........#.....#.#...........#...........#...........#..
    ........#.....#.#...........#...........#...........#..
    ........#.....#.#...........#...........#...........#..
    ........#############.......#...........#...........#..
    ..............#.#...#.......#...........#...........#..
    ..............#.#.###########.....#######...........#..
    ..............#.#.#.#.............#.................#..
    ..............###########.........#.......###########..
    ................#.#.#...#.........#.......#............
    ................#.#.#...#.........#.......#............
    ................#.#.#...#.........#.......#............
    ................##########^.......#.......#............
    ..................#.#...#.........#.......#............
    ..........###########...#.........#.......#............
    ..........#.......#.....#.........#.......#............
    ..........#.......###########.....#.......#............
    ..........#.............#...#.....#.......#............
    ......###########.......###########.......#############
    ......#...#.....#...........#.........................#
    ......#...#.....#...........#.........................#
    ......#...#.....#...........#.........................#
    ......#...#.....#...........#.........................#
    ......#...#.....#...........#.........................#
    ###########.....#...........#.........................#
    #.....#.........#...........#..........................
    #.....#.........#...........#..........................
    #.....#.........#...........#..........................
    #.....#.........#############..........................
    #.....#................................................
    #######................................................


    L10R12R12R6R10L10L10R12R12R10L10L12R6R6R10L10R10L10L12R6R6R10L10R10L10L12R6L10R12R12R10L10L12R6
    AR6R10L10AR10L10L12R6R6R10L10R10L10L12R6R6R10L10R10L10L12R6AR10L10L12R6
    ABAR10L10L12R6BR10L10L12R6BR10L10L12R6AR10L10L12R6

    ABACBCBCAC

    A = L10R12R12
    B = R6R10L10
    C = R10L10L12R6
    """

    # AB AC BC BC AC
    main_routine = [65, 44, 66, 44,
                    65, 44, 67, 44,
                    66, 44, 67, 44,
                    66, 44, 67, 44,
                    65, 44, 67,
                    10]

    # A = L10R12R12
    function_a = [76, 44, 49, 48, 44,
                  82, 44, 49, 50, 44,
                  82, 44, 49, 50, 10]

    # B = R6R10L10
    function_b = [82, 44, 54, 44,
                  82, 44, 49, 48, 44,
                  76, 44, 49, 48, 10]

    # C = R10L10L12R6
    function_c = [82, 44, 49, 48, 44,
                  76, 44, 49, 48, 44,
                  76, 44, 49, 50, 44,
                  82, 44, 54, 10]

    video_feed = [110, 10]

    # load the controller
    full_input = main_routine + function_a + function_b + function_c + video_feed

    m = IntCode(program, full_input)

    # run the program
    output = m.run()

    space = ''.join([chr(x) for x in output[:-1]])
    print(space)

    dirt = output[-1]

    return dirt


def main():

    with open('input') as in_f:
        data = in_f.readline().strip().split(',')
        program = [int(n) for n in data]

    # manual override
    program[0] = 2

    solution = solve(program)

    print(solution)


if __name__ == "__main__":

    main()
